name: CI

on:
  push:
  pull_request:

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r services/api/requirements.txt
          pip install ruff coverage
      - name: Lint (ruff)
        run: ruff check services/api
      - name: Tests with coverage
        env:
          DATABASE_URL: sqlite+aiosqlite:///./test_api_ci.db
          OCR_PROVIDER: stub
        run: |
          coverage run -m pytest -q
          coverage xml -o coverage-api.xml
          coverage report --fail-under=75
      - name: Acceptance smoke (load test)
        env:
          DATABASE_URL: sqlite+aiosqlite:///./test_api_ci.db
          OCR_PROVIDER: stub
        run: |
          python services/api/scripts/load_test.py --concurrency 2 --requests 8 --mode testclient --budget 0.8 | cat

  flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
      - name: Get packages
        working-directory: apps/mobile_web_flutter
        run: flutter pub get
      - name: Analyze
        working-directory: apps/mobile_web_flutter
        run: flutter analyze
      - name: Widget tests (if any)
        working-directory: apps/mobile_web_flutter
        run: flutter test --coverage || true

name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Set safe ENV defaults
        run: |
          echo "OCR_PROVIDER=stub" >> $GITHUB_ENV
          echo "OTLP_ENDPOINT=" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/api/requirements.txt -r services/api/requirements-dev.txt
      - name: Lint (ruff)
        run: ruff --version && ruff check .
      - name: Format check (black)
        run: black --check services/api
      - name: Tests (pytest + coverage)
        run: |
          E2E_MAX_SECONDS=20 pytest --cov=services/api --cov-report=xml --cov-fail-under=75
      - name: WORM layout smoke test
        run: |
          python - <<'PY'
          from pathlib import Path
          # Ensure WORM layout root exists during CI
          root = Path('.worm_store')
          root.mkdir(exist_ok=True)
          # Simulate a doc digest path
          d = 'a'*64
          p = root / d[:2] / d[2:4]
          p.mkdir(parents=True, exist_ok=True)
          (p / f"{d}_doc.jpg").write_bytes(b'0')
          assert (p / f"{d}_doc.jpg").exists()
          print('WORM smoke ok')
          PY

  flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Create Flutter app if missing
        run: |
          if [ ! -d "apps/mobile_web_flutter" ]; then
            flutter create apps/mobile_web_flutter
          fi
      - name: Flutter pub get
        working-directory: apps/mobile_web_flutter
        run: flutter pub get
      - name: Generate (build_runner)
        working-directory: apps/mobile_web_flutter
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Flutter analyze
        working-directory: apps/mobile_web_flutter
        run: flutter analyze --no-fatal-infos --no-fatal-warnings
      - name: Flutter test
        working-directory: apps/mobile_web_flutter
        run: flutter test

  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        working-directory: infra/terraform
        run: terraform fmt -check
      - name: Terraform validate
        working-directory: infra/terraform
        run: |
          terraform init -backend=false
          terraform validate


